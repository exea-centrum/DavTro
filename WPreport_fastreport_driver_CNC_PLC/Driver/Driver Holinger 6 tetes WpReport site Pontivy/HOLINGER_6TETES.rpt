[Record REPORT]
[CODE=HOLINGER_6TETES]
[C]code=HOLINGER_6TETES
[M]design=34181
<?xml version="1.0" encoding="utf-8"?>
<TfrxReport Version="4.6.5" DotMatrixReport="false" EngineOptions.DoublePass="true" IniFile="\Software\Fast Reports" PreviewOptions.AllowEdit="false" PreviewOptions.Buttons="4089" PreviewOptions.Zoom="1" PrintOptions.Printer="Par défaut" PrintOptions.PrintOnSheet="0" ReportOptions.CreateDate="39895,5206704861" ReportOptions.Description.Text="" ReportOptions.Name="HOLINGER_6TETES" ReportOptions.LastChange="39895,5206704861" ScriptLanguage="PascalScript" ScriptText.Text="var&#13;&#10;t, tlog : tfilestream;&#13;&#10;chemin, cheminreseau, CR : string;                                    &#13;&#10;ligne : string;&#13;&#10;cmd, chas, nchas, ctrav, x, y, z, cle : string;&#13;&#10;flag, cpt, cpt2, ncadre, i, cptt2 : integer;&#13;&#10;cadreouvrant, tmp, tmp1, tmp2 : variant;&#13;&#10;k, p, f, xx, yy, zz, c, s, a, b, cc, d, e, cpt1  : integer;&#13;&#10;xmini, xmaxi, ymini, ymaxi, zmini, zmaxi, log : integer;&#13;&#10;&#13;&#10;function leftzero(s: string; t: integer) : string;&#13;&#10;var&#13;&#10;boucle : integer;                                        &#13;&#10;begin&#13;&#10;       if length(s) &#62; t then&#13;&#10;       begin&#13;&#10;               s:=copy(s, 1, t);                                                        &#13;&#10;       end&#13;&#10;       else&#13;&#10;       begin                     &#13;&#10;               for boucle := length(s) to t-1 do&#13;&#10;               begin&#13;&#10;                       s:= '0' + s;                                                               &#13;&#10;               end;                         &#13;&#10;       end;&#13;&#10;       result := s;                                   &#13;&#10;end;&#13;&#10;&#13;&#10;function verifsoud(dim: integer; p : string;) : integer;&#13;&#10;begin&#13;&#10;       if dim = 0 then&#13;&#10;       begin&#13;&#10;               if MessageDlg('La valeur de '+p+' est à 0' +chr(13)+chr(10)+'Désirez-vous entrer une autre valeur?'+chr(13)+chr(10)+'Cette valeur sera inscrite dans le fichier Holinger6.ini',mtconfirmation,mbyes+mbno,0)= Mryes then&#13;&#10;               begin&#13;&#10;                       while dim = 0 do                                                                                &#13;&#10;                       begin                                 &#13;&#10;                               dim := strtoint(InputBox('valeur de '+p,'Veuillez entrer une valeur pour '+p, '0'));&#13;&#10;                       end;                                                                  &#13;&#10;               end;&#13;&#10;               iniwriteinteger('.\Holinger6.ini', 'Soudage:'+p, dim);                                                                                                                                               &#13;&#10;       end;&#13;&#10;&#13;&#10;       result := dim;                                       &#13;&#10;&#13;&#10;end;&#13;&#10;&#13;&#10;procedure logsoudure(txt : string);&#13;&#10;begin             &#13;&#10;       if fileexists('.\Holinger6_log.log') then&#13;&#10;       begin&#13;&#10;               tlog := tfilestream.create('.\Holinger6_log.log', fmopenreadwrite);&#13;&#10;               tlog.position:= tlog.size;                                                                      &#13;&#10;       end&#13;&#10;       else&#13;&#10;       begin&#13;&#10;               tlog := tfilestream.create('.\Holinger6_log.log', fmcreate);                                                                                                                           &#13;&#10;       end;&#13;&#10;&#13;&#10;       txt := 'Date : ' + Datetostr(&#60;TODAY&#62;) + CR + 'Heure : ' + timetostr(&#60;NOW&#62;) + CR + txt;                                                                                               &#13;&#10;         &#13;&#10;       tlog.write(txt, length(txt));&#13;&#10;       tlog.free;                       &#13;&#10;end;          &#13;&#10;  &#13;&#10;begin                          &#13;&#10;       k := 1;&#13;&#10;       p := 2;&#13;&#10;       f := 3;                         &#13;&#10;       xx := 4;&#13;&#10;       yy := 5;&#13;&#10;       zz := 6;&#13;&#10;       c := 7;&#13;&#10;       s := 8;&#13;&#10;       a := 9;&#13;&#10;       b := 10;&#13;&#10;       cc := 11;&#13;&#10;       d := 12;&#13;&#10;       e := 13;                           &#13;&#10;         &#13;&#10;       CR := chr(13) + chr(10);&#13;&#10;       firstrecord('detlot');&#13;&#10;       ncadre := recordcount('detlot');&#13;&#10;&#13;&#10;       //constitution du tableau de données&#13;&#10;         &#13;&#10;       cadreouvrant := vararraycreate([1,ncadre, 1,14], varvariant);&#13;&#10;         &#13;&#10;       i:=1;                   &#13;&#10;       cmd := '';&#13;&#10;       chas := '';&#13;&#10;       nchas := &#60;detlot.&#34;numero&#34;&#62;;                           &#13;&#10;       while not queryeof('detlot') do&#13;&#10;       begin                                     &#13;&#10;               flag := 0;&#13;&#10;&#13;&#10;               if &#60;detlot.&#34;posi&#34;&#62; = 1 then&#13;&#10;               begin                                                                                               &#13;&#10;                       cadreouvrant[i,k]:=&#60;detlot.&#34;codebarre&#34;&#62;;                          &#13;&#10;                         &#13;&#10;                       if cmd &#60;&#62; &#60;detlot.&#34;commande&#34;&#62; then&#13;&#10;                       begin&#13;&#10;                               cmd := &#60;detlot.&#34;commande&#34;&#62;;&#13;&#10;                               chas := &#60;detlot.&#34;chassis&#34;&#62;;                                                       &#13;&#10;                       end&#13;&#10;                       else&#13;&#10;                       begin&#13;&#10;                               chas := &#60;detlot.&#34;chassis&#34;&#62;;                                                                &#13;&#10;                       end;&#13;&#10;                                                                                                                                   &#13;&#10;                       replaceparam('trav:cmd', 'ftstring', cmd);&#13;&#10;                       replaceparam('trav:cha', 'ftstring', chas);                          &#13;&#10;                       execsql('trav');                   &#13;&#10;        &#13;&#10;                       //voir comment afficher si soudage double                          &#13;&#10;        &#13;&#10;                       cadreouvrant[i,f] := copy(&#60;detlot.&#34;casier&#34;&#62;,1,3);                                                         &#13;&#10;                                  &#13;&#10;                       //définition de la dimension du cadre et de la position de la traverse  &#13;&#10;                       if (not queryeof('trav')) and (&#60;trav.&#34;sens&#34;&#62;=0) then&#13;&#10;                       begin                                                                                    &#13;&#10;                               cadreouvrant[i,e] := &#60;trav.&#34;traverse&#34;&#62;;                                         &#13;&#10;                               y := floattostr(&#60;detlot.&#34;dim1&#34;&#62;);&#13;&#10;                               nextrecord('detlot');&#13;&#10;                               x:= floattostr(&#60;detlot.&#34;dim1&#34;&#62;);                           &#13;&#10;                               priorrecord('detlot');                   &#13;&#10;                       end&#13;&#10;                       else&#13;&#10;                       begin&#13;&#10;                               if (not queryeof('trav')) and (&#60;trav.&#34;sens&#34;&#62;=1) then&#13;&#10;                               begin&#13;&#10;                                       cadreouvrant[i,e] := &#60;trav.&#34;traverse&#34;&#62;;                                                                                  &#13;&#10;                                       x:= floattostr(&#60;detlot.&#34;dim1&#34;&#62;);&#13;&#10;                                       nextrecord('detlot');&#13;&#10;                                       y := floattostr(&#60;detlot.&#34;dim1&#34;&#62;);                                          &#13;&#10;                                       priorrecord('detlot');&#13;&#10;                               end&#13;&#10;                               else&#13;&#10;                               begin                                                                 &#13;&#10;                                       cadreouvrant[i,e] := '00000';                                                                                                &#13;&#10;                                       x:= floattostr(&#60;detlot.&#34;dim1&#34;&#62;);&#13;&#10;                                       nextrecord('detlot');&#13;&#10;                                       y := floattostr(&#60;detlot.&#34;dim1&#34;&#62;);                                            &#13;&#10;                                       priorrecord('detlot');&#13;&#10;                               end;                                                                                  &#13;&#10;                       end;                                                  &#13;&#10;        &#13;&#10;                       cadreouvrant[i,xx] := x;&#13;&#10;                       cadreouvrant[i,yy] := y;                                                                                                                               &#13;&#10;        &#13;&#10;                       if not queryeof('trav') then&#13;&#10;                       begin&#13;&#10;                               cadreouvrant[i,zz] := floattostr(&#60;trav.&#34;position&#34;&#62;);;                                                   &#13;&#10;                       end&#13;&#10;                       else&#13;&#10;                       begin&#13;&#10;                               cadreouvrant[i,zz] := '00000';                                                                                                                                                  &#13;&#10;                       end;&#13;&#10;                       // fin calcul dimension&#13;&#10;                       cadreouvrant[i,s] := 'S001';&#13;&#10;                       cadreouvrant[i,a] := &#60;detlot.&#34;profil&#34;&#62;;                                         &#13;&#10;               end;&#13;&#10;                 &#13;&#10;               if &#60;detlot.&#34;posi&#34;&#62; = 2 then&#13;&#10;               begin&#13;&#10;                       cadreouvrant[i,b] := &#60;detlot.&#34;profil&#34;&#62;;                                            &#13;&#10;               end;&#13;&#10;                 &#13;&#10;               if &#60;detlot.&#34;posi&#34;&#62; = 3 then&#13;&#10;               begin&#13;&#10;                       cadreouvrant[i,cc] := &#60;detlot.&#34;profil&#34;&#62;;                                               &#13;&#10;               end;&#13;&#10;                 &#13;&#10;               if &#60;detlot.&#34;posi&#34;&#62; = 4 then&#13;&#10;               begin&#13;&#10;                       cadreouvrant[i,d] := &#60;detlot.&#34;profil&#34;&#62;;&#13;&#10;                       inc(i,1);                                           &#13;&#10;               end;                           &#13;&#10;                 &#13;&#10;               nextrecord('detlot');                                                                                                                       &#13;&#10;       end;                 &#13;&#10;       // fin consitution tableau                                                       &#13;&#10;&#13;&#10;       //positionnement en début de tableau les cadre ouvrants avec traverse&#13;&#10;       tmp := vararraycreate([1,1, 1, 14], varvariant);                                                                                      &#13;&#10;&#13;&#10;       // Phase 1 tri par hauteurs +  &#13;&#10;       // Vérification des dimension maxi et mini supportées par la machine si ok les données retenues seront triées                                                                                      &#13;&#10;         &#13;&#10;       xmini := verifsoud(inireadinteger('./Holinger6.ini', 'Soudage:xmini', '0'), 'xmini');&#13;&#10;       ymini := verifsoud(inireadinteger('./Holinger6.ini', 'Soudage:ymini', '0'), 'ymini');&#13;&#10;       zmini := verifsoud(inireadinteger('./Holinger6.ini', 'Soudage:zmini', '0'), 'zmini');&#13;&#10;       xmaxi := verifsoud(inireadinteger('./Holinger6.ini', 'Soudage:xmaxi', '0'), 'xmaxi');&#13;&#10;       ymaxi := verifsoud(inireadinteger('./Holinger6.ini', 'Soudage:ymaxi', '0'), 'ymaxi');&#13;&#10;       zmaxi := verifsoud(inireadinteger('./Holinger6.ini', 'Soudage:zmaxi', '0'), 'zmaxi');&#13;&#10;         &#13;&#10;       log := 0;&#13;&#10;       cpt2 := 1;                               &#13;&#10;       ligne := '';&#13;&#10;       tmp1 := vararraycreate([1,i, 1,14], varvariant);                                                                                            &#13;&#10;       for cpt1 := 1 to i-1 do&#13;&#10;       begin&#13;&#10;               if (xmini &#62;= strtoint(cadreouvrant[cpt1,xx])) OR (xmaxi &#60;= strtoint(cadreouvrant[cpt1,xx])) then&#13;&#10;               begin&#13;&#10;                       log := 1;&#13;&#10;                       ligne := 'Codebarre Cadre : ' + cadreouvrant[cpt1,k] +CR;&#13;&#10;                       ligne := ligne+'Dimension en X : ' + cadreouvrant[cpt1,xx] +CR;&#13;&#10;                       ligne := ligne+'-------------------------------------------------------'+CR;                                                                                                                                                                       &#13;&#10;                       logsoudure(ligne);                                                                                &#13;&#10;               end&#13;&#10;               else&#13;&#10;               begin&#13;&#10;                       if (ymini &#62;= strtoint(cadreouvrant[cpt1,yy])) OR (ymaxi &#60;= strtoint(cadreouvrant[cpt1,yy])) then&#13;&#10;                       begin&#13;&#10;                               log := 1;&#13;&#10;                               ligne := 'Codebarre Cadre : ' + cadreouvrant[cpt1,k] +CR;&#13;&#10;                               ligne := ligne+'Dimension en Y : ' + cadreouvrant[cpt1,yy] +CR;&#13;&#10;                               ligne := ligne+'-------------------------------------------------------'+CR;                                   &#13;&#10;                               logsoudure(ligne);                                   &#13;&#10;                       end&#13;&#10;                       else&#13;&#10;                       begin&#13;&#10;                               if cadreouvrant[cpt1,zz] &#60;&#62; '00000' then&#13;&#10;                               begin&#13;&#10;                                       if (zmini &#62;= strtoint(cadreouvrant[cpt1,zz])) OR (zmaxi &#60;= strtoint(cadreouvrant[cpt1,zz])) then&#13;&#10;                                       begin                                           &#13;&#10;                                               log := 1;&#13;&#10;                                               ligne := 'Codebarre Cadre : ' + cadreouvrant[cpt1,k] +CR;&#13;&#10;                                               ligne := ligne+'Dimension en Z : ' + cadreouvrant[cpt1,zz] +CR;&#13;&#10;                                               ligne := ligne+'-------------------------------------------------------'+CR;                                                                                                                                                                 &#13;&#10;                                               logsoudure(ligne);                                                   &#13;&#10;                                       end&#13;&#10;                                       else&#13;&#10;                                       begin&#13;&#10;                                               for k := 1 to e do&#13;&#10;                                               begin                                   &#13;&#10;                                                       tmp1[cpt2,k] := cadreouvrant[cpt1,k];&#13;&#10;                                               end;&#13;&#10;                                               inc(cpt2,1);                                                                         &#13;&#10;                                       end;                                                 &#13;&#10;                               end&#13;&#10;                               else&#13;&#10;                               begin&#13;&#10;                                       for k := 1 to e do&#13;&#10;                                       begin                                   &#13;&#10;                                               tmp1[cpt2,k] := cadreouvrant[cpt1,k];&#13;&#10;                                       end;&#13;&#10;                                       inc(cpt2,1);                                           &#13;&#10;                               end;                                         &#13;&#10;                       end;                                 &#13;&#10;               end;                         &#13;&#10;                                        &#13;&#10;       end;&#13;&#10;         &#13;&#10;if cpt2 &#62; 1 then&#13;&#10;begin            &#13;&#10;       cadreouvrant := vararraycreate([1, cpt2, 1, 14], varvariant);&#13;&#10;       for i := 1 to cpt2-1 do&#13;&#10;       begin&#13;&#10;               for k := 1 to e do&#13;&#10;               begin&#13;&#10;                       cadreouvrant[i, k] := tmp1[i, k];                                                                                                &#13;&#10;               end;                         &#13;&#10;       end;                 &#13;&#10;       k := 1;           &#13;&#10;       //Tri du tableau&#13;&#10;       i := i+1;                             &#13;&#10;       for cpt1 := 1 to i-1 do&#13;&#10;       begin           &#13;&#10;               for cpt2 := cpt1+1 to i-1 do&#13;&#10;               begin                                                                      &#13;&#10;                       if cadreouvrant[cpt1,xx] &#60; cadreouvrant[cpt2,xx] then&#13;&#10;                       begin&#13;&#10;                               tmp[1] := cadreouvrant[cpt1];  &#13;&#10;                               cadreouvrant[cpt1] := cadreouvrant[cpt2];&#13;&#10;                               cadreouvrant[cpt2] := tmp[1];                                                                                   &#13;&#10;                       end;                                 &#13;&#10;               end;&#13;&#10;       end;                 &#13;&#10;&#13;&#10;       // fin phase 1&#13;&#10;       tmp := vararraycreate([1,i, 1, 14], varvariant);           &#13;&#10;       tmp1 := vararraycreate([1,i, 1,14], varvariant);&#13;&#10;         &#13;&#10;       cpt1 := 1;                               &#13;&#10;       cpt2 := 1;&#13;&#10;&#13;&#10;       //phase 2 groupement des cadres avec traverse d'ouvrant                                                                                                                               &#13;&#10;         &#13;&#10;       for cpt := 1 to i-1 do&#13;&#10;       begin&#13;&#10;               if cadreouvrant[cpt, zz] &#60;&#62; '00000' then &#13;&#10;               begin&#13;&#10;                       for k := 1 to e do&#13;&#10;                       begin                                   &#13;&#10;                               tmp1[cpt1,k] := cadreouvrant[cpt,k];&#13;&#10;                       end;                                                                  &#13;&#10;                       inc(cpt1,1);                                               &#13;&#10;               end                                                  &#13;&#10;               else &#13;&#10;               begin&#13;&#10;                       for k := 1 to e do&#13;&#10;                       begin                                            &#13;&#10;                               tmp[cpt2,k] := cadreouvrant[cpt,k];&#13;&#10;                       end;                                                                  &#13;&#10;                       inc(cpt2,1);                                                   &#13;&#10;               end;                                                  &#13;&#10;       end;                 &#13;&#10;       // fin phase 2&#13;&#10;&#13;&#10;       // phase 3 : groupement des cadres du mm ouvrant (2 vtx)&#13;&#10;       tmp2 := vararraycreate([1,i,1,14],varvariant);                                                             &#13;&#10;       k:=1;                   &#13;&#10;       cpt := 1;&#13;&#10;       cptt2 := 1;&#13;&#10;       while cpt &#60;= cpt2-1 do&#13;&#10;       begin           &#13;&#10;               if tmp[cpt,k] = tmp[cpt+1,k] then&#13;&#10;               begin&#13;&#10;                       tmp[cpt,p]:=tmp[cpt+1,f];&#13;&#10;                       tmp[cpt+1,p]:=tmp[cpt,f];                           &#13;&#10;                       for flag := 1 to e do&#13;&#10;                       begin                                   &#13;&#10;                               tmp1[cpt1,flag] := tmp[cpt,flag];                                                                                    &#13;&#10;                       end;&#13;&#10;                       inc(cpt,1);                               &#13;&#10;                       inc(cpt1,1);                           &#13;&#10;                       for flag := 1 to e do&#13;&#10;                       begin                                   &#13;&#10;                               tmp1[cpt1,flag] := tmp[cpt,flag];                                                                                    &#13;&#10;                       end;                                                                                  &#13;&#10;                       inc(cpt1,1);                           &#13;&#10;               end&#13;&#10;               else&#13;&#10;               begin&#13;&#10;                       for flag := 1 to e do&#13;&#10;                       begin                                   &#13;&#10;                               tmp2[cptt2,flag] := tmp[cpt,flag];                                                                                    &#13;&#10;                       end;&#13;&#10;                       inc(cptt2,1);                                                                                        &#13;&#10;               end;                         &#13;&#10;               inc(cpt,1);                                                &#13;&#10;       end;                 &#13;&#10;         &#13;&#10;       // fin phase 3&#13;&#10;       // au final 2 tableaux un avec les traverses d'ouvrant et les doubles cadres et un avec le reste,&#13;&#10;       // traiter le fichier texte en fonction des 2 tableaux&#13;&#10;       // indice du 1er tableau tmp1 [] = cpt1-1&#13;&#10;       // indice du 2e tableau tmp2[] = cptt2-1;                                                                                          &#13;&#10;       // fin positionnement ouvrant/traverses                                                                                                &#13;&#10;         &#13;&#10;       chemin := inireadstring('./Holinger6.ini', 'Chemin de base:chemin', '.\');&#13;&#10;       cheminreseau := inireadstring('./Holinger6.ini', 'Chemin reseau:chemin', '.\');                                                                           &#13;&#10;       forcedirectories(chemin);&#13;&#10;       forcedirectories(cheminreseau);                                                                       &#13;&#10;       t := tfilestream.create(chemin+'WPO'+trim(&#60;detlot.&#34;lot&#34;&#62;)+'.ouv', fmcreate);&#13;&#10;       k:=1;                   &#13;&#10;       cpt := 001;                                 &#13;&#10;       ligne := '';         &#13;&#10;       flag := 0;                               &#13;&#10;&#13;&#10;       //traitement du permier tableau&#13;&#10;         &#13;&#10;       for i := 1 to cpt1-1 do&#13;&#10;       begin&#13;&#10;               if tmp1[i,zz] &#60;&#62; '00000' then cle := 'simple'&#13;&#10;               else cle := 'double';&#13;&#10;                 &#13;&#10;               ligne := 'N'+leftzero(inttostr(cpt),3);&#13;&#10;               ligne := ligne + 'K' +leftzero(tmp1[i,k], 10);&#13;&#10;               ligne := ligne + 'P' +leftzero(tmp1[i,p],5);&#13;&#10;               ligne := ligne + 'F' +leftzero(tmp1[i,f],3);&#13;&#10;               ligne := ligne + 'X' +leftzero(tmp1[i,xx],5)+ 'Y' +leftzero(tmp1[i,yy],5)+ 'Z' +leftzero(tmp1[i,zz],5);&#13;&#10;               ligne := ligne + 'C' + leftzero(inireadstring('./Holinger6.ini', tmp1[i,a]+':'+cle,tmp1[i,a]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp1[i,b]+':'+cle,tmp1[i,b]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp1[i,c]+':'+cle,tmp1[i,c]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp1[i,d]+':'+cle,tmp1[i,d]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp1[i,e]+':'+cle,tmp1[i,e]) ,4) &#13;&#10;               + tmp1[i,s] + CR;&#13;&#10;               t.write(ligne, length(ligne));&#13;&#10;               ligne := '';&#13;&#10;               inc(cpt,1);                                       &#13;&#10;       end;&#13;&#10;       // fin traitement 1er tableau&#13;&#10;&#13;&#10;       //traitement 2e tableau           &#13;&#10;       flag := 0;                               &#13;&#10;       for i := 1 to cptt2-1 do&#13;&#10;       begin&#13;&#10;               ligne := 'N'+leftzero(inttostr(cpt),3);&#13;&#10;               ligne := ligne + 'K' +leftzero(tmp2[i,k], 10);                            &#13;&#10;               if i+1 &#62;= cptt2-1 then&#13;&#10;               begin&#13;&#10;                       if tmp2[i, xx] = tmp2[i+1, xx] then&#13;&#10;                       begin&#13;&#10;                               if flag = 0 then&#13;&#10;                               begin&#13;&#10;                                       cle := 'double';                                                                                                            &#13;&#10;                                       flag := 1;&#13;&#10;                                       ligne := ligne + 'P' + leftzero(copy(tmp2[i+1,f],1,3), 5);                                                                                           &#13;&#10;                               end&#13;&#10;                               else&#13;&#10;                               begin&#13;&#10;                                       cle := 'double';                                                                                                            &#13;&#10;                                       flag := 0;&#13;&#10;                                       ligne := ligne + 'P' + leftzero(copy(tmp2[i-1,f],1,3),5);                                                                                            &#13;&#10;                               end;                           &#13;&#10;                       end&#13;&#10;                       else&#13;&#10;                       begin&#13;&#10;                               if flag = 0 then&#13;&#10;                               begin&#13;&#10;                                       cle := 'simple';                                                                                                               &#13;&#10;                                       ligne := ligne + 'P' + leftzero(tmp2[i,p],5);&#13;&#10;                               end&#13;&#10;                               else&#13;&#10;                               begin&#13;&#10;                                       cle := 'double';                                                                                                                                                     &#13;&#10;                                       flag := 0;&#13;&#10;                                       ligne := ligne + 'P' + leftzero(copy(tmp2[i-1,f],1,3),5);                                                                            &#13;&#10;                               end;                           &#13;&#10;                       end;&#13;&#10;               end&#13;&#10;               else&#13;&#10;               begin&#13;&#10;                       if flag = 0 then&#13;&#10;                       begin&#13;&#10;                               cle := 'simple';                                                                                                               &#13;&#10;                               ligne := ligne + 'P' + leftzero(tmp2[i,p],5);&#13;&#10;                       end&#13;&#10;                       else&#13;&#10;                       begin&#13;&#10;                               cle := 'double';                                                                                                                                                     &#13;&#10;                               flag := 0;&#13;&#10;                               ligne := ligne + 'P' + leftzero(copy(tmp2[i-1,f],1,3),5);                                                                            &#13;&#10;                       end;                                            &#13;&#10;               end;&#13;&#10;               ligne := ligne + 'F' +leftzero(tmp2[i,f],3);&#13;&#10;               ligne := ligne + 'X' +leftzero(tmp2[i,xx],5)+ 'Y' +leftzero(tmp2[i,yy],5)+ 'Z' +leftzero(tmp2[i,zz],5);&#13;&#10;               ligne := ligne + 'C' + leftzero(inireadstring('./Holinger6.ini', tmp2[i,a]+':'+cle,tmp2[i,a]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp2[i,b]+':'+cle,tmp2[i,b]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp2[i,c]+':'+cle,tmp2[i,c]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp2[i,d]+':'+cle,tmp2[i,d]) ,4) &#13;&#10;               + leftzero(inireadstring('./Holinger6.ini', tmp2[i,e]+':'+cle,tmp2[i,e]) ,4) &#13;&#10;               + tmp2[i,s] + CR;&#13;&#10;               t.write(ligne, length(ligne));&#13;&#10;               ligne := '';&#13;&#10;               inc(cpt,1);                                       &#13;&#10;       end;&#13;&#10;         &#13;&#10;       //fin traitement 2e tableau         &#13;&#10;       t.free;&#13;&#10;       CopyFile(chemin+'WPO'+trim(&#60;detlot.&#34;lot&#34;&#62;)+'.ouv',cheminreseau+'WPO'+trim(&#60;detlot.&#34;lot&#34;&#62;)+'.ouv');&#13;&#10;end;                   &#13;&#10;  &#13;&#10;       if log = 1 then showmessage('Des informations n''ont pas été passées dans le fichier machine'+Chr(13)+chr(10)+'Veuillez consulter le fichier Holinger6_log.log');                                                                          &#13;&#10;end." StoreInDFM="false" PropData
  <TfrxDataPage Name="Data" Height="1000" Left="0" Top="0" Width="1000"/>
  <TfrxReportPage Name="Page1" PaperWidth="210" PaperHeight="297" PaperSize="9" LeftMargin="0" RightMargin="0" TopMargin="0" BottomMargin="0" ColumnWidth="0" ColumnPositions.Text="" HGuides.Text="" VGuides.Text=""/>
</TfrxReport>

[I]fr3=1
[C]title=Driver Soudeuse 6 têtes Holinger
[End of REPORT]
[Record REPORTQRY]
[REPORT=HOLINGER_6TETES   0]
[C]database=db
[C]datasource=%DSN%
[C]name=Database1
[M]params=13
%AUTOLOGIN%

[C]report=HOLINGER_6TETES
[C]type=D
[I]typedb=9
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=HOLINGER_6TETES   1]
[C]database=db
[I]line=1
[C]name=detlot
[M]params=526
select d.lot, d.commande, d.chassis, d.profil, d.casier, 
case d.position 
when 1 then 1 
when 2 then 3 
when 3 then 2 
when 4 then 4
when 5 then 5
when 6 then 5
else 5
end as posi, 
d.type, d.numero, d.dim1, d.dim2, p.codebarre
from detlot d inner join prepalot p on d.lot=p.lot and d.commande=p.commande and d.chassis=p.id
where d.lot = :order and d.type =2 
and position in (1,2,3,4,5,6) 
and d.instruct='C' and d.dormant=0
order by d.lot desc, d.commande, d.chassis, d.vantail, d.`type`, posi,d.dim1, d.dim2
[C]report=HOLINGER_6TETES
[M]sqlfox=662
select d.lot, d.commande, d.chassis, d.profil, d.casier, 
iif(val(d.position)=1, 1,iif(val(d.position)=2, 3,iif(val(d.position)=3, 2,iif(val(d.position)=4, 4,iif(val(d.position)=5, 5,iif(val(d.position)=6, 5, 5)))))) as posi, 
d.type, d.numero, d.dim1, d.dim2, p.codebarre
from detlot d inner join prepalot p on d.lot=p.lot and d.commande=p.commande and d.chassis=p.id
where val(d.lot) = 93 and d.type =2 
and (val(position) = 1 or val(position) = 2 or val(position) = 3 or val(position) = 4 or val(position) = 5 or val(position) = 6) 
and d.instruct='C' and d.dormant=0
order by d.lot desc, d.commande, d.chassis, d.vantail, d.`type`, posi,d.dim1, d.dim2
[M]sqlmy=522
select d.lot, d.commande, d.chassis, d.profil, d.casier, 
case d.position 
when 1 then 1 
when 2 then 3 
when 3 then 2 
when 4 then 4
when 5 then 5
when 6 then 5
else 5
end as posi, 
d.type, d.numero, d.dim1, d.dim2, p.codebarre
from detlot d inner join prepalot p on d.lot=p.lot and d.commande=p.commande and d.chassis=p.id
where d.lot = 93 and d.type =2 
and position in (1,2,3,4,5,6) 
and d.instruct='C' and d.dormant=0
order by d.lot desc, d.commande, d.chassis, d.vantail, d.`type`, posi,d.dim1, d.dim2
[C]type=Q
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=HOLINGER_6TETES   2]
[C]database=db
[I]line=2
[C]name=detail
[M]params=70
select dim1, dim2 from detail where commande = :cmd and chassis = :cha
[C]report=HOLINGER_6TETES
[C]type=Q
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=HOLINGER_6TETES   3]
[C]database=db
[I]line=3
[C]name=trav
[M]params=101
select sens, position, traverse from travouvr where commande= :cmd and chassis=:cha and traverse <>''
[C]report=HOLINGER_6TETES
[C]type=Q
[End of REPORTQRY]
