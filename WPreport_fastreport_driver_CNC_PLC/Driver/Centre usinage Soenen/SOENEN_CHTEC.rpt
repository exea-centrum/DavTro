[Record REPORT]
[CODE=SOENEN_CHTEC]
[C]CODE=SOENEN_CHTEC
[C]TITLE=Driver - Working Center Soenen
[M]DESCRIPTIO=16
v1.0 du 03/09/09
[X]DESIGN=50418
<?xml version="1.0" encoding="utf-8"?>
<TfrxReport Version="4.7.163" DotMatrixReport="false" EngineOptions.DoublePass="true" IniFile="\Software\Fast Reports" PreviewOptions.AllowEdit="false" PreviewOptions.Buttons="4089" PreviewOptions.Zoom="1" PrintOptions.Printer="Por defecto" PrintOptions.PrintOnSheet="0" ReportOptions.CreateDate="39450,5426372569" ReportOptions.Description.Text="" ReportOptions.Name="SOENEN_CHTEC" ReportOptions.LastChange="39653,4479956829" ScriptLanguage="PascalScript" ScriptText.Text="Var    &#13;&#10;&#13;&#10;fichier : TFileStream;&#13;&#10;fichierIni, codeLot, nomRepertoire, nomFichier, ligne, bufferTmp, posProfil, codeClientPrec, nomClientPrec, strAngle1, strAngle2, CrLf, strSQL, strTmp : string;&#13;&#10;cntKP, cntKT, cntRT, cntKO, cntLn, Dormant, Sash, numCasier, cntSash, cntDorman, cntTransom, positionProfil, intLngKP, numeroLot : integer;  &#13;&#10;diametreUsg, longueurUsg, largeurUsg, profondeurUsg, comparaisonCodeClient, valDiametre, valLongueur, vallargeur, valProfondeur, intSoldadura : integer;&#13;&#10;positionUsinage : double;&#13;&#10;&#13;&#10;usg: tfilestream;&#13;&#10;toto:string;                          &#13;&#10;usgligne, usgligne2 : array of string;                                     &#13;&#10;retrait : double;&#13;&#10;i, i2, j : integer;                                &#13;&#10;                                                                          &#13;&#10;                                 &#13;&#10;Function Right(var cadena : String; c : String; n : integer) : String;   &#13;&#10;var&#13;&#10;i, d : integer;&#13;&#10;Begin      &#13;&#10;  If ( n &#62; 0) then        &#13;&#10;    begin              &#13;&#10;      i:=1;             &#13;&#10;      while i &#60;= n  do&#13;&#10;       begin&#13;&#10;          cadena := cadena + c;&#13;&#10;          inc(i,1)                          &#13;&#10;       end;&#13;&#10;     end;               &#13;&#10;         &#13;&#10;   Result := cadena;     &#13;&#10;End;   &#13;&#10;&#13;&#10;Function Left(var cadena : String; c : String; n : integer) : String;   &#13;&#10;var&#13;&#10;i, d : integer;&#13;&#10;Begin      &#13;&#10;  if ( n &#62; 0) then        &#13;&#10;    begin              &#13;&#10;      i:=1;             &#13;&#10;      while i &#60;= n  do&#13;&#10;       begin&#13;&#10;          cadena := c + cadena;  &#13;&#10;          inc(i,1)                          &#13;&#10;       end;&#13;&#10;     end;               &#13;&#10;       &#13;&#10;   Result := cadena;     &#13;&#10;End;     &#13;&#10;  &#13;&#10;  &#13;&#10;Begin&#13;&#10;   &#13;&#10;   CrLf := CHR(13) + CHR(10);&#13;&#10;   // Définition du fichier Ini.&#13;&#10;   fichierIni := '.\\DriverSoenen.ini';  &#13;&#10;     &#13;&#10;   // Récupération des informations sur le lot.                                                                                                                                 &#13;&#10;   ExecSQL('lot');&#13;&#10;   FirstRecord('lot');                                           &#13;&#10;   numeroLot := &#60;lot.&#34;lot&#34;&#62;;&#13;&#10;   if &#60;lot.&#34;code&#34;&#62;='' then&#13;&#10;   begin&#13;&#10;       codeLot := IntToStr(numeroLot);                &#13;&#10;   end&#13;&#10;   else&#13;&#10;   begin&#13;&#10;       codeLot   := &#60;lot.&#34;code&#34;&#62;;                       &#13;&#10;   end;             &#13;&#10;   &#13;&#10;   // Constitution du nom du fichier.&#13;&#10;   if copy(IniReadString(fichierIni, 'Chemin de Base:fichier', '.\'),length(IniReadString(fichierIni, 'Chemin de Base:fichier', '.\')), 1) = '\' then&#13;&#10;       nomRepertoire := IniReadString(fichierIni, 'Chemin de Base:fichier', '.\') + codeLot + '\'       &#13;&#10;   else &#13;&#10;       nomRepertoire := IniReadString(fichierIni, 'Chemin de Base:fichier', '.\') + '\' + codeLot + '\';&#13;&#10;                                           &#13;&#10;     &#13;&#10;   ForceDirectories(nomRepertoire);&#13;&#10;&#13;&#10;   nomFichier := nomRepertoire + codeLot + '.' + IniReadString(fichierIni, 'Extension:65', 'dem');&#13;&#10;   fichier := TFileStream.Create(nomFichier, fmCreate);&#13;&#10;&#13;&#10;    // Weld --//-- Soldadura&#13;&#10;   intSoldadura := IniReadInteger(fichierIni, 'Option:Weld', '0')*2;&#13;&#10;&#13;&#10;   intLngKP := 0;              &#13;&#10;   cntKP := 1;                                                                                                &#13;&#10;   cntKT := 1;&#13;&#10;   cntRT := 1;                               &#13;&#10;   cntLn := 1;&#13;&#10;   cntKO := 0;       &#13;&#10;     &#13;&#10;   cntSash := 1;       &#13;&#10;   cntDorman := 100;    &#13;&#10;   cntTransom := 300;&#13;&#10;&#13;&#10;   codeClientPrec := '';                                                 &#13;&#10;         &#13;&#10;   // Header ------------------------------------- // Aquí falta recuperar información.                                                                                                                                                                                                                                                  &#13;&#10;   ligne := 'OPT' + 'Série de fabrication:' + LEFT(IntToStr(numeroLot), ' ', 7 - Length(IntToStr(numeroLot)));                                                                        &#13;&#10;   ligne := Right(ligne,' ',119 - Length(ligne)) + '$' + CrLf;&#13;&#10;   &#13;&#10;   fichier.Write(ligne, Length(ligne));&#13;&#10;    // Récupération des informations sur le lot.                                                                                                                                 &#13;&#10;   ExecSQL('datos');&#13;&#10;     &#13;&#10;   Firstrecord('datos');&#13;&#10;     &#13;&#10;   // KO - Comentary for the machine&#13;&#10;   strSQL := 'SELECT profil, teinteext, descriptio, dim , sum(qte) as qte FROM detlot d ' + CrLf;    &#13;&#10;   strSQL := strSQL + 'WHERE val(lot) = ' + IntToStr(&#60;datos.&#34;lot&#34;&#62;) + ' and instruct = &#34;C&#34; ';&#13;&#10;   strSQL := strSQL + 'GROUP BY profil, dim;';&#13;&#10;           &#13;&#10;   ReplaceSQL('sqlTmp2',strSQL);&#13;&#10;   ExecSQL('sqlTmp2');&#13;&#10;   Firstrecord('sqlTmp2');&#13;&#10;&#13;&#10;   while not QueryEOF('sqlTmp2') do&#13;&#10;    begin&#13;&#10;     if ( cntKO &#60;= 15 ) then&#13;&#10;      begin                 &#13;&#10;       ligne := 'KO' + 'N' + Left(IntToStr(cntKO), '0', 2 - Length(IntToStr(cntKO)));&#13;&#10;       bufferTmp := Copy(&#60;sqlTmp2.&#34;profil&#34;&#62;,1,10) + ' ' + Copy(&#60;sqlTmp2.&#34;teinteext&#34;&#62;,1,9);           &#13;&#10;       ligne := ligne + 'T' + Right(Copy(bufferTmp,1,20), ' ', 20 - Length(Copy(bufferTmp,1,20)));&#13;&#10;       ligne := ligne +  Left(IntToStr(&#60;sqlTmp2.&#34;dim&#34;&#62;), ' ', 5 - Length(IntToStr(&#60;sqlTmp2.&#34;dim&#34;&#62;)));&#13;&#10;       ligne := ligne +  Left(IntToStr(&#60;sqlTmp2.&#34;qte&#34;&#62;), ' ', 4 - Length(IntToStr(&#60;sqlTmp2.&#34;qte&#34;&#62;)));&#13;&#10;       ligne := ligne +  Left('', ' ', 4);&#13;&#10;              &#13;&#10;       ligne := Right(ligne,' ',119 - Length(ligne)) + '$' + CrLf;&#13;&#10;       fichier.Write(ligne, Length(ligne));           &#13;&#10;      end;                 &#13;&#10;     Inc(cntKO);&#13;&#10;     NextRecord('sqlTmp2');         &#13;&#10;    end;         &#13;&#10;       &#13;&#10;  &#13;&#10;    while not QueryEOF('datos') do&#13;&#10;     begin                                                                           &#13;&#10;&#13;&#10;      //Determinamos si estamos en el tipo Marco o Hojas                                                                                                                                                                                           &#13;&#10;      if (&#60;datos.&#34;type&#34;&#62; = 1) then&#13;&#10;       begin        &#13;&#10;        Dormant := 1;                       &#13;&#10;        Sash := 0;  &#13;&#10;       end;&#13;&#10;     &#13;&#10;      if (&#60;datos.&#34;type&#34;&#62; = 2) then&#13;&#10;       begin                         &#13;&#10;        Dormant := 0;                         &#13;&#10;        Sash := 1;     &#13;&#10;       end;&#13;&#10;      &#13;&#10;      // Datos&#13;&#10;       case &#60;datos.&#34;instruct&#34;&#62; of&#13;&#10;         'P' : &#13;&#10;           begin&#13;&#10;             // Bars to cut --//-- Barra a cortar                                                                                    &#13;&#10;             ligne := 'KP';&#13;&#10;                                  &#13;&#10;             // ( N ) Bar number [3 n digits]                                                                    &#13;&#10;             ligne := ligne + 'N' + Left(IntToStr(cntKP),'0',3-Length(cntKP));                  &#13;&#10;             &#13;&#10;             // ( E ) Single or Dobule cut [ 1 n digit ] Preguntar esto                                                                                                                                                                                       &#13;&#10;             ligne := ligne + 'E' + '1';                     &#13;&#10;             &#13;&#10;             // ( B ) Profile descritpion in rear track example red/ yellow [ 20 c digits ] - Color cara posterior -&#13;&#10;             ligne := ligne + 'B' + RIGHT(Copy(&#60;datos.&#34;teinteext&#34;&#62;,1,20), ' ',20 - Length(Copy(&#60;datos.&#34;teinteext&#34;&#62;,1,20)));                 &#13;&#10;                          &#13;&#10;             // ( L ) Length of bar [ 5 n digits ] - Longitud de la barra -               &#13;&#10;             ligne := ligne + 'L' + Left(Copy(IntToStr(&#60;datos.&#34;dim&#34;&#62;*10),1,5),'0', 5 - Length(IntToStr(&#60;datos.&#34;dim&#34;&#62;*10)));&#13;&#10;               &#13;&#10;             // ( T ) Profile Number in rear track [ 8 c digits ] - Numero profile cara Posterior -&#13;&#10;             ligne := ligne + 'T' + Right(Copy(&#60;datos.&#34;profil&#34;&#62;,1,8), ' ', 8 - Length(Copy(&#60;datos.&#34;profil&#34;&#62;,1,8)));&#13;&#10;             //ligne := ligne + 'T' + Right(Copy('12345678910',1,8), ' ', 8 - Length(Copy('12345678910',1,8)));                 &#13;&#10;                       &#13;&#10;             ligne := Right(ligne,' ',119 - Length(ligne)) + '$' + CrLf;&#13;&#10;&#13;&#10;             fichier.Write(ligne, Length(ligne));               &#13;&#10;                &#13;&#10;             intLngKP := &#60;datos.&#34;dim&#34;&#62;;                               &#13;&#10;             &#13;&#10;             //We increase the counter of parts - Incrementamos el Contador cntKP (Contador de las Barras)&#13;&#10;             Inc(cntKP);                 &#13;&#10;           end;      &#13;&#10;         'C' :&#13;&#10;           begin&#13;&#10;             cntKT := cntLn;                                                                    &#13;&#10;             posProfil := ' ';&#13;&#10;             case &#60;datos.&#34;position&#34;&#62; of&#13;&#10;                '1': &#13;&#10;               begin&#13;&#10;                  posProfil := 'G';&#13;&#10;               end;  &#13;&#10;                '2': &#13;&#10;               begin&#13;&#10;                  posProfil := 'D';&#13;&#10;               end;&#13;&#10;                '3':&#13;&#10;               begin&#13;&#10;                  posProfil := 'H';                                                                                                                                                                                                                   &#13;&#10;                end;  &#13;&#10;                '4': &#13;&#10;                begin&#13;&#10;                  posProfil := 'B';                                                                                                                                                                                                                   &#13;&#10;                end;  &#13;&#10;                '5': &#13;&#10;               begin&#13;&#10;                  posProfil := 'TV';                                                                                                                                                                                                                   &#13;&#10;                end;  &#13;&#10;                '6': &#13;&#10;               begin&#13;&#10;                  posProfil := 'TH';                                                                                                                                                                                                                   &#13;&#10;                end;&#13;&#10;               //Sr : Début modif                                                                              &#13;&#10;                Else &#13;&#10;               begin&#13;&#10;                  posProfil := '  ';                                                                                                                                                         &#13;&#10;               end;&#13;&#10;               //Sr : Fin Modif                                                      &#13;&#10;             end;                                    &#13;&#10;&#13;&#10;             // Profile to cut --//-- Perfil a cortar&#13;&#10;             ligne := 'KT';&#13;&#10;                            &#13;&#10;             // ( N ) Part Number Counter [ 4 n digits] - Nº de Secuencia/Contador -             &#13;&#10;             ligne := ligne + 'N' + Left(IntToStr(cntKT),'0',4-Length(cntKT));             &#13;&#10;               &#13;&#10;             // ( F ) Carrier number (for PVC and Steel) [ 3 n digits ] - Nº de Casillero. -&#13;&#10;             // DB - 06/11/2008.&#13;&#10;             //if  (&#60;datos.&#34;type&#34;&#62; = 1) or (&#60;datos.&#34;type&#34;&#62; = 3) then&#13;&#10;             // begin                           &#13;&#10;             //    ligne := ligne + 'F' + LEFT(IntToStr(&#60;datos.&#34;casier&#34;&#62;-50000), '0',4 - Length(IntToStr(&#60;datos.&#34;casier&#34;&#62;-50000))); // For Outer Frames -- // -- Para Marcos                                                                &#13;&#10;             // end&#13;&#10;             //  else                                            &#13;&#10;             // begin                &#13;&#10;             //   ligne := ligne + 'F' + LEFT(IntToStr(&#60;datos.&#34;casier&#34;&#62;), '0',4 - Length(IntToStr(&#60;datos.&#34;casier&#34;&#62;)));       // For Sahs -- // -- Para las Hojas&#13;&#10;             // end;&#13;&#10;             ligne := ligne + 'F0' +  Right(Copy(&#60;datos.&#34;chassis&#34;&#62;,1,3), ' ', 3 - Length(Copy(&#60;datos.&#34;chassis&#34;&#62;,1,3)));                                                                       &#13;&#10;             // --                          &#13;&#10;               &#13;&#10;             // ( B ) Part Description [ 20 c digits ] - Descripción de la pieza -&#13;&#10;             bufferTmp := Copy(&#60;datos.&#34;profil&#34;&#62;,1,10) + ' ' + Copy(&#60;datos.&#34;teinteext&#34;&#62;,1,9);&#13;&#10;             ligne := ligne + 'B' + RIGHT(Copy(bufferTmp,1,20), ' ', 20 - Length(Copy(bufferTmp,1,20)));&#13;&#10;                          &#13;&#10;             // ( L ) Length  of part in 0.1 mm [ 5 n digits ] Longitud del corte en décimas de mm&#13;&#10;             ligne := ligne + 'L' + Left(IntToStr(&#60;datos.&#34;dim&#34;&#62;*10), '0', 5 - Length(IntToStr(&#60;datos.&#34;dim&#34;&#62;*10)));                                                                                                               &#13;&#10;            &#13;&#10;             // ( G ) type de coupe [ 10 n digits ] Tipo de corte segun documentación.                                                                                                                                                                                           &#13;&#10;             ligne := ligne + 'G';&#13;&#10;               &#13;&#10;             strAngle1 := '00000';&#13;&#10;             if (&#60;datos.&#34;angle1&#34;&#62; = 90) or (&#60;datos.&#34;angle1&#34;&#62; &#60;&#62; 45) then&#13;&#10;               strAngle1 := '00002';&#13;&#10;&#13;&#10;             strAngle2 := '00000';&#13;&#10;             if (&#60;datos.&#34;angle2&#34;&#62; = 90) or (&#60;datos.&#34;angle2&#34;&#62; &#60;&#62; 45) then&#13;&#10;               strAngle2 := '00002';                 &#13;&#10;&#13;&#10;             if (&#60;datos.&#34;position&#34;&#62; &#60;&#62; '*') then&#13;&#10;               begin                                            &#13;&#10;               positionProfil := StrToInt(&#60;datos.&#34;position&#34;&#62;);&#13;&#10;               end                         &#13;&#10;             else&#13;&#10;               begin                                          &#13;&#10;               positionProfil := 0;&#13;&#10;               end;                               &#13;&#10;               &#13;&#10;             ligne := ligne + strAngle2 + strAngle1;&#13;&#10;&#13;&#10;             // ( Q ) I think that here I need put the large of main barre profil                                                                                                                                         &#13;&#10;             ligne := ligne + 'Q600000000';// + Right(IntToStr(intLngKP), '0',9 - Length(IntToStr(intLngKP)));&#13;&#10;                                        &#13;&#10;             // ( N ) Label number. [ 5 n characters]&#13;&#10;             ligne := ligne + 'N' + Left(IntToStr(cntKT), '0', 5 - Length(IntToStr(cntKT)));                 &#13;&#10;               &#13;&#10;             //  - Insert here the Millings -- / -- Insertar Aquí los Mecanizados -&#13;&#10;             strSQL := 'SELECT  u.code as code, u.codebarre, u.position, u.numero, ug.outil, ug.outil3, ug.longueur, ug.largeur, ug.profondeur, ug.diametre ' + CrLf;                 &#13;&#10;             strSQL := strSQL + 'FROM usglot u INNER JOIN usinage ug ON ug.code = u.code ' + CrLf;&#13;&#10;             strSQL := strSQL + 'WHERE val(lot) = ' + IntToStr(&#60;datos.&#34;lot&#34;&#62;) + ' and  codebarre = &#34;' + &#60;datos.&#34;codebarre&#34;&#62; + '&#34;';&#13;&#10;&#13;&#10;             if (&#60;datos.&#34;position&#34;&#62; &#60;&#62; '*') and ((StrToInt(&#60;datos.&#34;position&#34;&#62;) = 1) or (StrToInt(&#60;datos.&#34;position&#34;&#62;) = 3)) then  &#13;&#10;              begin&#13;&#10;               strSQL := strSQL + 'ORDER BY u.position DESC;';&#13;&#10;              end&#13;&#10;               else&#13;&#10;              begin&#13;&#10;               strSQL := strSQL + 'ORDER BY u.position;';                  &#13;&#10;              end;                        &#13;&#10;                                                                                                               &#13;&#10;             ReplaceSQL('sqlTmp',strSQL);&#13;&#10;             ExecSQL('sqlTmp');&#13;&#10;             Firstrecord('sqlTmp');&#13;&#10;                              &#13;&#10;             if QueryIsNull('sqlTmp') then&#13;&#10;              begin&#13;&#10;                ligne := Right(ligne,' ',119 - Length(ligne)) + '$' + CrLf;                       &#13;&#10;                fichier.Write(ligne, Length(ligne));                                   &#13;&#10;              end&#13;&#10;              else&#13;&#10;              begin&#13;&#10;                ligne := Right(ligne,' ',119 - Length(ligne)) + '%' + CrLf;                       &#13;&#10;                fichier.Write(ligne, Length(ligne));&#13;&#10;&#13;&#10;                usg:= tfilestream.create('.\listeusg.ini', fmcreate);                                                                                     &#13;&#10;                //usgligne := '';&#13;&#10;                i := 1;&#13;&#10;                i2 := 1;                  &#13;&#10;                // modif DD : ajout d'une variable tableau qui contient le code usinage pour lequel un retrait doit etre effectué&#13;&#10;                                                        &#13;&#10;               setlength(usgligne, RecordCount('sqltmp')+1);&#13;&#10;               setlength(usgligne2, RecordCount('sqltmp')+1);                   &#13;&#10;               while not queryeof('sqltmp') do&#13;&#10;                begin&#13;&#10;                                           &#13;&#10;                       if IniReadString(fichierIni, 'exclusion_vis_renfort:'+trim(&#60;sqltmp.&#34;code&#34;&#62;), '0') &#60;&#62; '0' then&#13;&#10;                       begin&#13;&#10;                               retrait:=strtofloat(trim(IniReadString(fichierIni, 'exclusion_vis_renfort:'+trim(&#60;sqltmp.&#34;code&#34;&#62;), '0')));                                                                                  &#13;&#10;                               usgligne[i] := &#60;sqltmp.&#34;code&#34;&#62;+';'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;-retrait)+'@'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;+retrait);&#13;&#10;                               toto:=&#60;sqltmp.&#34;code&#34;&#62;+';'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;-retrait)+'@'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;+retrait)+';'+chr(13)+chr(10);&#13;&#10;                               usg.write(toto, length(toto));                                                                                                &#13;&#10;                               inc(i,1);                                                   &#13;&#10;                       end;&#13;&#10;                       if IniReadString(fichierIni, 'exclusion_trou_preforage:'+trim(&#60;sqltmp.&#34;code&#34;&#62;), '0') &#60;&#62; '0' then&#13;&#10;                       begin&#13;&#10;                               retrait:=strtofloat(trim(IniReadString(fichierIni, 'exclusion_trou_preforage:'+trim(&#60;sqltmp.&#34;code&#34;&#62;), '0')));                                                                                  &#13;&#10;                               usgligne2[i2] := &#60;sqltmp.&#34;code&#34;&#62;+';'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;-retrait)+'@'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;+retrait);&#13;&#10;                               //toto:=&#60;sqltmp.&#34;code&#34;&#62;+';'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;-retrait)+'@'+floattostr(&#60;sqltmp.&#34;position&#34;&#62;+retrait)+';'+chr(13)+chr(10);&#13;&#10;                               //usg.write(toto, length(toto));                                                                                                &#13;&#10;                               inc(i2,1);                                                   &#13;&#10;                       end;                           &#13;&#10;                       nextrecord('sqltmp');                                                                                     &#13;&#10;                end;  &#13;&#10;                usg.free;                                    &#13;&#10;                // fin modif DD&#13;&#10;                  &#13;&#10;              end;                &#13;&#10;&#13;&#10;              firstrecord('sqltmp');                                                                            &#13;&#10;             while not QueryEOF('sqlTmp') do&#13;&#10;              begin&#13;&#10;                  // Tooling / - Mecanizados -&#13;&#10;                  ligne := 'Q';                        &#13;&#10;                  ligne := ligne + Left(Copy(&#60;sqlTmp.&#34;outil&#34;&#62;,1,4), '0', 4 - Length(Copy(&#60;sqlTmp.&#34;outil&#34;&#62;,1,4)));&#13;&#10;                    &#13;&#10;                  // Modif de DD: exclusion vis renfort dans le cas ou les usinages se superposent et correspondent aux usinages de vissage des renforts                                                                                                                      &#13;&#10;                  //positionUsinage := &#60;sqlTmp.&#34;position&#34;&#62;;&#13;&#10;                  if i &#62; 1 then&#13;&#10;                  begin                                                                                                                                       &#13;&#10;                       if (trim(&#60;sqltmp.&#34;code&#34;&#62;) = 'VISSAGE DORMANT') or (trim(&#60;sqltmp.&#34;code&#34;&#62;) = 'VISSAGE OUVRANT') then&#13;&#10;                       begin&#13;&#10;                               positionUsinage:=0;                                                                                                                &#13;&#10;                               j:=1;                                                                                    &#13;&#10;                               while j &#60;= i-1 do&#13;&#10;                               begin&#13;&#10;                                       if (&#60;sqlTmp.&#34;position&#34;&#62; &#62; strtofloat(copy(usgligne[j], pos(';', usgligne[j])+1, (pos('@',usgligne[j]))-(pos(';', usgligne[j])+1)))) and (&#60;sqlTmp.&#34;position&#34;&#62; &#60; strtofloat(copy(usgligne[j], pos('@',usgligne[j])+1,length(usgligne[j])-pos('@',usgligne[j])))) then&#13;&#10;                                       begin&#13;&#10;                                               //showmessage(copy(usgligne[j],0,pos(';',usgligne[j])-1));                                                                                                                        &#13;&#10;                                               if &#60;sqltmp.&#34;position&#34;&#62; &#62; (strtofloat(copy(usgligne[j], pos(';', usgligne[j])+1, (pos('@',usgligne[j])-1)-(pos(';', usgligne[j])+1)))+strtofloat(trim(inireadstring(fichierini,'exclusion_vis_renfort:'+copy(usgligne[j],0,pos(';',usgligne[j])-1), '0')))) thenbegin&#13;&#10;                                                       positionUsinage := strtofloat(copy(usgligne[j], pos('@', usgligne[j])+1, (length(usgligne[j])-pos('@',usgligne[j]))));&#13;&#10;                                                       j:=i-1;                                                   &#13;&#10;                                               end&#13;&#10;                                               else&#13;&#10;                                               begin&#13;&#10;                                                       positionUsinage := strtofloat(copy(usgligne[j], pos(';', usgligne[j])+1, (pos('@',usgligne[j]))-(pos(';', usgligne[j])+1)));&#13;&#10;                                                       j:=i-1;                                                   &#13;&#10;                                               end;&#13;&#10;                                       end;&#13;&#10;                                       inc(j,1);                                                                   &#13;&#10;                               end;&#13;&#10;                               if positionUsinage=0 then&#13;&#10;                               begin                                                   &#13;&#10;                                       positionUsinage := &#60;sqlTmp.&#34;position&#34;&#62;;&#13;&#10;                               end;                                                                                                  &#13;&#10;                                                                                  &#13;&#10;                       end&#13;&#10;                       else&#13;&#10;                       begin&#13;&#10;                               if (trim(&#60;sqltmp.&#34;code&#34;&#62;) = 'PREDORM6.5') or (trim(&#60;sqltmp.&#34;code&#34;&#62;) = 'PREDORM10') then&#13;&#10;                               begin&#13;&#10;                                       positionUsinage:=0;                                                                                                                &#13;&#10;                                       j:=1;                                                                                    &#13;&#10;                                       while j &#60;= i2-1 do&#13;&#10;                                       begin&#13;&#10;                                               if (&#60;sqlTmp.&#34;position&#34;&#62; &#62; strtofloat(copy(usgligne2[j], pos(';', usgligne2[j])+1, (pos('@',usgligne2[j]))-(pos(';', usgligne2[j])+1)))) and (&#60;sqlTmp.&#34;position&#34;&#62; &#60; strtofloat(copy(usgligne2[j], pos('@',usgligne2[j])+1,length(usgligne2[j])-pos('@',usgligne2[j])))) then&#13;&#10;                                               begin&#13;&#10;                                                       //showmessage(copy(usgligne[j],0,pos(';',usgligne[j])-1));                                                                                                                        &#13;&#10;                                                       if &#60;sqltmp.&#34;position&#34;&#62; &#62; (strtofloat(copy(usgligne2[j], pos(';', usgligne2[j])+1, (pos('@',usgligne2[j])-1)-(pos(';', usgligne2[j])+1)))+strtofloat(trim(inireadstring(fichierini,'exclusion_trou_preforage:'+copy(usgligne2[j],0,pos(';',usgligne2[j])-1), '0')))) thenbegin&#13;&#10;                                                               positionUsinage := strtofloat(copy(usgligne2[j], pos('@', usgligne2[j])+1, (length(usgligne2[j])-pos('@',usgligne2[j]))));&#13;&#10;                                                               j:=i-1;                                                   &#13;&#10;                                                       end&#13;&#10;                                                       else&#13;&#10;                                                       begin&#13;&#10;                                                               positionUsinage := strtofloat(copy(usgligne2[j], pos(';', usgligne2[j])+1, (pos('@',usgligne2[j]))-(pos(';', usgligne2[j])+1)));&#13;&#10;                                                               j:=i-1;                                                   &#13;&#10;                                                       end;&#13;&#10;                                               end;&#13;&#10;                                               inc(j,1);                                                                   &#13;&#10;                                       end;&#13;&#10;                                       if positionUsinage=0 then&#13;&#10;                                       begin                                                   &#13;&#10;                                               positionUsinage := &#60;sqlTmp.&#34;position&#34;&#62;;&#13;&#10;                                       end;                                                                                                  &#13;&#10;                                                                                          &#13;&#10;                               end&#13;&#10;                               else&#13;&#10;                               begin                                                            &#13;&#10;                                       positionUsinage := &#60;sqlTmp.&#34;position&#34;&#62;;&#13;&#10;                               end;                                         &#13;&#10;                       end;&#13;&#10;                       //inc(i,1);                                                   &#13;&#10;                       &#13;&#10;                  end&#13;&#10;                  else&#13;&#10;                  begin                           &#13;&#10;                       positionUsinage := &#60;sqlTmp.&#34;position&#34;&#62;;                                                                                                                                                                                                                 &#13;&#10;                  end;&#13;&#10;                       //inc(i,1);                                                                                                                                           &#13;&#10;                                        &#13;&#10;                  // fin de modif de DD                                                                &#13;&#10;                  &#13;&#10;                  if (positionProfil = 2) or (positionProfil = 4)or (positionProfil=6) then&#13;&#10;                       begin                                                             &#13;&#10;                       positionUsinage := &#60;datos.&#34;dim&#34;&#62; - positionUsinage;&#13;&#10;                       end;                                 &#13;&#10;                                                                                                                        &#13;&#10;                  ligne := ligne + Left(Copy(FloatToStr(positionUsinage*10.0),1,5), '0', 5 - Length(Copy(FloatToStr(positionUsinage*10.0),1,5)));                      &#13;&#10;                  if Length(&#60;sqltmp.&#34;outil3&#34;&#62;) &#62; 0 then&#13;&#10;                     ligne := ligne + 'S' + &#60;sqltmp.&#34;outil3&#34;&#62;&#13;&#10;                  else&#13;&#10;                     ligne := ligne + 'S0';  &#13;&#10;                  &#13;&#10;                  if Length(&#60;sqlTmp.&#34;diametre&#34;&#62;) &#62; 0 then&#13;&#10;                    begin                                                                         &#13;&#10;                    valDiametre := StrToInt(&#60;sqlTmp.&#34;diametre&#34;&#62;);&#13;&#10;                    if (valDiametre &#62; 0) then&#13;&#10;                       begin&#13;&#10;                       ligne := ligne + 'D' + Left(IntToStr(valDiametre), '0', 5 - Length(IntToStr(valDiametre)));                                                                       &#13;&#10;                       end                                 &#13;&#10;                    else      &#13;&#10;                       begin&#13;&#10;                       valDiametre := valDiametre * (-1);                             &#13;&#10;                       ligne := ligne + 'D-' + Left(IntToStr(valDiametre), '0', 4 - Length(IntToStr(valDiametre)));      &#13;&#10;                       end;                                 &#13;&#10;                    end;&#13;&#10;                                                                                                                                                                             &#13;&#10;                  if Length(&#60;sqlTmp.&#34;longueur&#34;&#62;) &#62; 0 then&#13;&#10;                    begin&#13;&#10;                    valLongueur := StrToInt(&#60;sqlTmp.&#34;longueur&#34;&#62;);&#13;&#10;                    if (valLongueur &#62; 0) then           &#13;&#10;                       begin                                                         &#13;&#10;                       ligne := ligne + 'L' + Left(IntToStr(valLongueur), '0', 5 - Length(IntToStr(valLongueur)));&#13;&#10;                       end                               &#13;&#10;                    else&#13;&#10;                       begin&#13;&#10;                       valLongueur := valLongueur * (-1);                             &#13;&#10;                       ligne := ligne + 'L-' + Left(IntToStr(valLongueur), '0', 4 - Length(IntToStr(valLongueur)));&#13;&#10;                       end;                                 &#13;&#10;                    end;&#13;&#10;                                                                      &#13;&#10;                  if Length(&#60;sqlTmp.&#34;largeur&#34;&#62;) &#62; 0 then&#13;&#10;                    begin&#13;&#10;                    valLargeur := StrToInt(&#60;sqlTmp.&#34;largeur&#34;&#62;);&#13;&#10;                    if (valLargeur &#62; 0) then&#13;&#10;                       begin                                                                                                        &#13;&#10;                       ligne := ligne + 'B' + Left(IntToStr(valLargeur), '0', 5 - Length(IntToStr(valLargeur)));&#13;&#10;                       end                                 &#13;&#10;                    else&#13;&#10;                       begin&#13;&#10;                       valLargeur := valLargeur * (-1);                             &#13;&#10;                       ligne := ligne + 'B-' + Left(IntToStr(valLargeur), '0', 4 - Length(IntToStr(valLargeur)));&#13;&#10;                       end;                                 &#13;&#10;                    end;&#13;&#10;                                                     &#13;&#10;                  if Length(&#60;sqlTmp.&#34;profondeur&#34;&#62;) &#62; 0 then&#13;&#10;                    begin&#13;&#10;                    valProfondeur := StrToInt(&#60;sqlTmp.&#34;profondeur&#34;&#62;);&#13;&#10;                    if (valProfondeur &#62; 0) then        &#13;&#10;                       begin                                                                                                        &#13;&#10;                       ligne := ligne + 'P' + Left(IntToStr(valProfondeur), '0', 5 - Length(IntToStr(valProfondeur)));&#13;&#10;                       end                               &#13;&#10;                    else&#13;&#10;                       begin&#13;&#10;                       valProfondeur := valProfondeur * (-1);                               &#13;&#10;                       ligne := ligne + 'P-' + Left(IntToStr(valProfondeur), '0', 4 - Length(IntToStr(valProfondeur)));&#13;&#10;                       end;                                 &#13;&#10;                    end;                                &#13;&#10;&#13;&#10;                  Inc(cntLn);&#13;&#10;                                          &#13;&#10;                NextRecord('sqlTmp');&#13;&#10;                                 &#13;&#10;                if not QueryEOF('sqlTmp') then&#13;&#10;                 begin&#13;&#10;                   ligne := Right(ligne,' ',119 - Length(ligne)) + '%' + CrLf;                       &#13;&#10;                 end&#13;&#10;                 else&#13;&#10;                 begin&#13;&#10;                   ligne := Right(ligne,' ',119 - Length(ligne)) + '$' + CrLf;                     &#13;&#10;                 end;&#13;&#10;&#13;&#10;                 fichier.Write(ligne, Length(ligne));&#13;&#10;                 ligne := '';                                             &#13;&#10;              end;&#13;&#10;                                           &#13;&#10;             // Label Provisional                                                                                                                               &#13;&#10;             ligne := 'KE' + 'N' + Left(IntToStr(cntKT), '0', 5 - Length(IntToStr(cntKT))) + 'B';&#13;&#10;               &#13;&#10;             // Modif de DD: ajout du code du dxf dans la ligne KENB (modification dans la requête sql pour l'ajout du code dxf dans la query datos                                                                                                                                                                                                                                                                                                                                          &#13;&#10;             &#13;&#10;             ligne := ligne + Left(copy(&#60;datos.&#34;code_dxf&#34;&#62;,1,8), ' ', 8 - Length(copy(&#60;datos.&#34;code_dxf&#34;&#62;,1,8)))+'/';&#13;&#10;                                             &#13;&#10;             // code d'origine                                                     &#13;&#10;             //ligne := ligne + '00000002/';&#13;&#10;&#13;&#10;             // fin de modif DD                                                       &#13;&#10;               &#13;&#10;             comparaisonCodeClient := CompareText(codeClientPrec, &#60;datos.&#34;client&#34;&#62;);&#13;&#10;             if (comparaisonCodeClient &#60;&#62; 0) then&#13;&#10;               begin                                                                                                                                                                                                                                      &#13;&#10;               strSQL := 'SELECT nom FROM client WHERE code = &#34;' + &#60;datos.&#34;client&#34;&#62; + '&#34;';&#13;&#10;               ReplaceSQL('sqlTmp4', strSQL);&#13;&#10;               ExecSQL('sqlTmp4');&#13;&#10;               Firstrecord('sqlTmp4');&#13;&#10;               if QueryIsNull('sqlTmp4') then&#13;&#10;                 begin&#13;&#10;                 codeClientPrec := &#60;datos.&#34;client&#34;&#62;;&#13;&#10;                 nomClientPrec := &#60;datos.&#34;client&#34;&#62;;                                         &#13;&#10;                 end&#13;&#10;               else&#13;&#10;                 begin&#13;&#10;                 codeClientPrec := &#60;datos.&#34;client&#34;&#62;;&#13;&#10;                 nomClientPrec := &#60;sqlTmp4.&#34;nom&#34;&#62;;&#13;&#10;                 end;                           &#13;&#10;               end;                         &#13;&#10;                                  &#13;&#10;             ligne := ligne + Right(Copy(nomClientPrec,1,15), ' ', 15 - Length(Copy(nomClientPrec,1,15))) + '/';&#13;&#10;             ligne := ligne + Right(Copy(&#60;datos.&#34;lot&#34;&#62;,1,6), ' ', 6 - Length(Copy(&#60;datos.&#34;lot&#34;&#62;,1,6))) + '/';&#13;&#10;             ligne := ligne + Right(Copy(&#60;datos.&#34;commande&#34;&#62;,1,10), ' ', 10 - Length(Copy(&#60;datos.&#34;commande&#34;&#62;,1,10))) + '//';&#13;&#10;             ligne := ligne + Left(Copy(posProfil,1,3), ' ', 3 - Length(Copy(posProfil,1,3))) + '/';&#13;&#10;             numCasier := &#60;datos.&#34;casier&#34;&#62;;&#13;&#10;             if (numCasier &#62; 50000) then&#13;&#10;               begin                                                                                           &#13;&#10;               numCasier := numCasier - 50000;&#13;&#10;               end;                         &#13;&#10;             ligne := ligne + Left(IntToStr(numCasier), '0', 2 - Length(IntToStr(numCasier))) + '/';&#13;&#10;             ligne := ligne + Left(IntToStr(&#60;datos.&#34;dimrenfort&#34;&#62;), ' ', 4 - Length(IntToStr(&#60;datos.&#34;dimrenfort&#34;&#62;)))+ '/';&#13;&#10;             ligne := ligne + Left(Copy(&#60;datos.&#34;renfort&#34;&#62;,1,6), ' ', 6 - Length(Copy(&#60;datos.&#34;renfort&#34;&#62;,1,6))) +'/';                                                                                              &#13;&#10;             ligne := ligne + Right(Copy(&#60;datos.&#34;codebarre&#34;&#62;,1,10), ' ', 10 - Length(Copy(&#60;datos.&#34;codebarre&#34;&#62;,1,10)));               &#13;&#10;                              &#13;&#10;                                                  &#13;&#10;             ligne := Right(ligne,' ',119 - Length(ligne)) + '$' + CrLf;                                            &#13;&#10;             fichier.Write(ligne, Length(ligne));&#13;&#10;                                 &#13;&#10;           end;&#13;&#10;         'J' :&#13;&#10;           begin&#13;&#10;              // preguntar la necesidad de controlar este caso ?¿                                 &#13;&#10;           end; &#13;&#10;         'S' :&#13;&#10;           begin&#13;&#10;              // preguntar la necesidad de controlar este caso ?¿               &#13;&#10;           end;            &#13;&#10;         'H' :&#13;&#10;           begin&#13;&#10;             //Lines to Offcut Bar -- / -- Lineas de Material Sobrante - Restos  [     KRL00000A2     ]                                                                                                                                                           &#13;&#10;               &#13;&#10;             ligne := 'KRL' + Left(Copy(IntToStr(&#60;datos.&#34;dim&#34;&#62;*10),1,5),'0', 5 - Length(IntToStr(&#60;datos.&#34;dim&#34;&#62;*10)));&#13;&#10;          &#13;&#10;             if (IniReadString(fichierIni, 'Option:offcut', '0')='0') then&#13;&#10;               begin&#13;&#10;                 ligne := ligne + 'A0';   // Off-Cut                         &#13;&#10;               end&#13;&#10;                else                         &#13;&#10;               begin&#13;&#10;                 ligne := ligne + 'A1'; // Chute sur table 1                                      &#13;&#10;               end;&#13;&#10;&#13;&#10;             // Code du casier de rangement // Codigo para casillero (Examples files always 0000)                                                                                                                                                                                                        &#13;&#10;             ligne := ligne + 'F' + '0000';&#13;&#10;             ligne := Right(ligne,' ',119 - Length(ligne)) + '$' + CrLf;  &#13;&#10;               &#13;&#10;             fichier.Write(ligne, Length(ligne));&#13;&#10;             Inc(cntLn);                               &#13;&#10;           end; &#13;&#10;       end;          &#13;&#10;                                         &#13;&#10;                                                                                   &#13;&#10;      NextRecord('datos');&#13;&#10;     end;            &#13;&#10;  &#13;&#10;     &#13;&#10;  fichier.Free;       &#13;&#10;end." StoreInDFM="false" PropData="044C65667403D10203546F70031B0108446174617365747301010C2500000020446174615365743D225F6461746F732220446174615365744E616D653D226461746F732200010C2100000020446174615365743D225F6C6F742220446174615365744E616D653D226C6F742200010C2700000020446174615365743D225F73716C546D702220446174615365744E616D653D2273716C546D702200010C2900000020446174615365743D225F73716C546D70322220446174615365744E616D653D2273716C546D70322200010C2900000020446174615365743D225F73716C546D70332220446174615365744E616D653D2273716C546D70332200010C2900000020446174615365743D225F73716C546D70342220446174615365744E616D653D2273716C546D7034220000095661726961626C657301010C10000000204E616D653D2220436861727365742200010C1E000000204E616D653D22414E53495F43484152534554222056616C75653D22302200010C21000000204E616D653D2244454641554C545F43484152534554222056616C75653D22312200010C20000000204E616D653D2253594D424F4C5F43484152534554222056616C75653D22322200010C1E000000204E616D653D224D41435F43484152534554222056616C75653D2237372200010C23000000204E616D653D2253484946544A495F43484152534554222056616C75653D223132382200010C23000000204E616D653D2248414E4745554C5F43484152534554222056616C75653D223132392200010C22000000204E616D653D2248414E47554C5F43484152534554222056616C75653D223132392200010C21000000204E616D653D224A4F4841425F43484152534554222056616C75653D223133302200010C22000000204E616D653D224742323331325F43484152534554222056616C75653D223133342200010C27000000204E616D653D224348494E455345424947355F43484152534554222056616C75653D223133362200010C21000000204E616D653D22475245454B5F43484152534554222056616C75653D223136312200010C23000000204E616D653D225455524B4953485F43484152534554222056616C75653D223136322200010C26000000204E616D653D22564945544E414D4553455F43484152534554222056616C75653D223136332200010C22000000204E616D653D224845425245575F43484152534554222056616C75653D223137372200010C22000000204E616D653D224152414249435F43484152534554222056616C75653D223137382200010C22000000204E616D653D2242414C5449435F43484152534554222056616C75653D223138362200010C23000000204E616D653D225255535349414E5F43484152534554222056616C75653D223230342200010C20000000204E616D653D22544841495F43484152534554222056616C75653D223232322200010C26000000204E616D653D22454153544555524F50455F43484152534554222056616C75653D223233382200010C1F000000204E616D653D224F454D5F43484152534554222056616C75653D223235352200010C0F000000204E616D653D222057696E50726F2200010C1F000000204E616D653D22544F444159222056616C75653D22342F30392F323030392200010C1C000000204E616D653D224E4F57222056616C75653D2231303A34313A30342200010C15000000204E616D653D22544142222056616C75653D22092200010C25000000204E616D653D22575055534552222056616C75653D2241646D696E6973747261746575722200010C1A000000204E616D653D224D4158504C4953222056616C75653D223130220000055374796C650100">
  <TfrxDataPage Name="Data" Height="1000" Left="0" Top="0" Width="1000"/>
</TfrxReport>

[N]FR3=1
[End of REPORT]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      0]
[C]REPORT=SOENEN_CHTEC
[C]TYPE=D
[C]DATABASE=wp
[C]NAME=wp
[C]DATASOURCE=%DSN%
[M]PARAMS=31
USER NAME=root
PASSWORD=root

[I]TYPEDB=6
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      1]
[C]REPORT=SOENEN_CHTEC
[I]LINE=1
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=sqlTmp
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      2]
[C]REPORT=SOENEN_CHTEC
[I]LINE=2
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=lot
[M]PARAMS=54
SELECT lot, code FROM Lot WHERE val(lot) = val(:order)
[M]SQLFOX=54
SELECT lot, code FROM Lot WHERE val(lot) = val(:order)
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      3]
[C]REPORT=SOENEN_CHTEC
[I]LINE=3
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=datos
[M]PARAMS=140
SELECT *, dx.code as code_dxf
FROM detlot d left join dxf dx on trim(d.profil)=trim(dx.code)
where d.scie = 1 and val(d.lot) = val(:order)
[M]SQLFOX=140
SELECT *, dx.code as code_dxf
FROM detlot d left join dxf dx on trim(d.profil)=trim(dx.code)
where d.scie = 1 and val(d.lot) = val(:order)
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      4]
[C]REPORT=SOENEN_CHTEC
[I]LINE=4
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=detail
[M]PARAMS=152
SELECT  dt.vitrage
FROM detlot d
inner join detail dt on dt.commande=d.commande and dt.numero=d.chassis
where d.scie = 1 and val(d.lot) = val(:order)
[M]SQLFOX=152
SELECT  dt.vitrage
FROM detlot d
inner join detail dt on dt.commande=d.commande and dt.numero=d.chassis
where d.scie = 1 and val(d.lot) = val(:order)
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      5]
[C]REPORT=SOENEN_CHTEC
[I]LINE=5
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=sqlTmp2
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      6]
[C]REPORT=SOENEN_CHTEC
[I]LINE=6
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=sqlTmp3
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      7]
[C]REPORT=SOENEN_CHTEC
[I]LINE=7
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=sqlTmp4
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      8]
[C]REPORT=SOENEN_CHTEC
[I]LINE=8
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=Query1
[M]SQLFOX=370
SELECT  u.code as code, u.codebarre, u.position, u.numero, ug.outil, ug.outil3, ug.longueur, ug.largeur, ug.profondeur, ug.diametre FROM usglot u INNER JOIN usinage ug ON ug.code = u.code WHERE val(lot) = 183 ORDER BY u.position DESC

SELECT *, dx.code as code_dxf
FROM detlot d inner join dxf dx on trim(d.profil)=trim(dx.code)
where d.scie = 1 and val(d.lot) = 193
[End of REPORTQRY]
[Record REPORTQRY]
[REPORT=SOENEN_CHTEC      9]
[C]REPORT=SOENEN_CHTEC
[I]LINE=9
[C]TYPE=Q
[C]DATABASE=wp
[C]NAME=Query2
[M]PARAMS=241
SELECT  u.code as code, u.codebarre, u.position, u.numero, ug.outil, ug.outil3, ug.longueur, ug.largeur, ug.profondeur, ug.diametre
FROM usglot u INNER JOIN usinage ug ON ug.code = u.code 
WHERE val(lot) = 190 and  codebarre = '0073A0112E'
[End of REPORTQRY]
